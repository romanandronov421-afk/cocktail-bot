#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞"""
import sys
import os
from dotenv import load_dotenv

print("=" * 50)
print("–ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ë–û–¢–ê")
print("=" * 50)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
print(f"\n‚úì Python –≤–µ—Ä—Å–∏—è: {sys.version}")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('env_file.txt')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
env_vars = {
    'TELEGRAM_BOT_TOKEN': os.getenv('TELEGRAM_BOT_TOKEN'),
    'YANDEX_API_KEY': os.getenv('YANDEX_API_KEY'),
    'FOLDER_ID': os.getenv('FOLDER_ID'),
}

all_ok = True
for key, value in env_vars.items():
    if value:
        print(f"  ‚úì {key}: OK (–¥–ª–∏–Ω–∞: {len(value)})")
    else:
        print(f"  ‚úó {key}: –û–¢–°–£–¢–°–¢–í–£–ï–¢")
        all_ok = False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:")
files_to_check = [
    'bot.py',
    'database.py',
    'hybrid_processor.py',
    'cocktail_party_processor.py',
    'enhanced_foodpairing_processor.py',
    'env_file.txt',
    'cocktails.db'
]

for file in files_to_check:
    if os.path.exists(file):
        print(f"  ‚úì {file}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print(f"  ‚úó {file}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        all_ok = False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤:")
try:
    import aiogram
    print("  ‚úì aiogram: OK")
except ImportError as e:
    print(f"  ‚úó aiogram: {e}")
    all_ok = False

try:
    from database import CocktailDatabase
    print("  ‚úì database: OK")
except ImportError as e:
    print(f"  ‚úó database: {e}")
    all_ok = False

try:
    from hybrid_processor import HybridCocktailProcessor
    print("  ‚úì hybrid_processor: OK")
except ImportError as e:
    print(f"  ‚úó hybrid_processor: {e}")
    all_ok = False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print("\nüíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
try:
    from database import CocktailDatabase
    db = CocktailDatabase()
    with db.conn:
        cursor = db.conn.cursor()
        cursor.execute("SELECT COUNT(*) FROM recipes")
        count = cursor.fetchone()[0]
        print(f"  ‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: OK ({count} –∫–æ–∫—Ç–µ–π–ª–µ–π)")
except Exception as e:
    print(f"  ‚úó –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
    all_ok = False

print("\n" + "=" * 50)
if all_ok:
    print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ - –ì–û–¢–û–í –ö –ó–ê–ü–£–°–ö–£")
else:
    print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ - –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï")
print("=" * 50)

sys.exit(0 if all_ok else 1)




