#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–æ—Ç–∞ MIXTRIX
"""

import sqlite3
import json

def analyze_database():
    """–ê–Ω–∞–ª–∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤"""
    print("üçπ MIXTRIX Bot - –ê–Ω–∞–ª–∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    print("=" * 60)
    
    conn = sqlite3.connect('cocktails.db')
    cursor = conn.cursor()
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    cursor.execute('SELECT COUNT(*) FROM recipes')
    total_recipes = cursor.fetchone()[0]
    print(f"üìä –í—Å–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤ –±–∞–∑–µ: {total_recipes}")
    print()
    
    # –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤
    print("üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:")
    print("-" * 40)
    cursor.execute('SELECT source, COUNT(*) FROM recipes GROUP BY source ORDER BY COUNT(*) DESC')
    sources = cursor.fetchall()
    
    for source, count in sources:
        percentage = (count / total_recipes) * 100
        print(f"‚Ä¢ {source}: {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤ ({percentage:.1f}%)")
    
    print()
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π
    print("üç∏ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π:")
    print("-" * 40)
    cursor.execute('SELECT category, COUNT(*) FROM recipes GROUP BY category ORDER BY COUNT(*) DESC LIMIT 10')
    categories = cursor.fetchall()
    
    for category, count in categories:
        print(f"‚Ä¢ {category}: {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    
    print()
    
    # –ë–∞–∑–æ–≤—ã–µ —Å–ø–∏—Ä—Ç—ã
    print("ü•É –ë–∞–∑–æ–≤—ã–µ —Å–ø–∏—Ä—Ç—ã:")
    print("-" * 40)
    cursor.execute('SELECT base_spirit, COUNT(*) FROM recipes GROUP BY base_spirit ORDER BY COUNT(*) DESC')
    spirits = cursor.fetchall()
    
    for spirit, count in spirits:
        print(f"‚Ä¢ {spirit}: {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    
    print()
    
    # –°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
    print("‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:")
    print("-" * 40)
    cursor.execute('SELECT difficulty, COUNT(*) FROM recipes GROUP BY difficulty ORDER BY COUNT(*) DESC')
    difficulties = cursor.fetchall()
    
    for difficulty, count in difficulties:
        print(f"‚Ä¢ {difficulty}: {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    
    print()
    
    # –ü—Ä–∏–º–µ—Ä—ã —Ä–µ—Ü–µ–ø—Ç–æ–≤
    print("üåü –ü—Ä–∏–º–µ—Ä—ã —Ä–µ—Ü–µ–ø—Ç–æ–≤:")
    print("-" * 40)
    cursor.execute('SELECT name, base_spirit, source FROM recipes ORDER BY RANDOM() LIMIT 5')
    examples = cursor.fetchall()
    
    for name, spirit, source in examples:
        print(f"‚Ä¢ {name} ({spirit}) - {source}")
    
    print()
    
    # –°–µ–∑–æ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    print("üçÇ –°–µ–∑–æ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:")
    print("-" * 40)
    cursor.execute('SELECT month, COUNT(*) FROM seasonal_ingredients GROUP BY month ORDER BY month')
    seasonal = cursor.fetchall()
    
    for month, count in seasonal:
        print(f"‚Ä¢ {month}: {count} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
    
    print()
    
    # –¢—Ä–µ–Ω–¥—ã
    print("üìà –¢—Ä–µ–Ω–¥—ã –∫–æ–∫—Ç–µ–π–ª–µ–π:")
    print("-" * 40)
    cursor.execute('SELECT trend_name, year FROM trends WHERE is_active = 1 ORDER BY year DESC')
    trends = cursor.fetchall()
    
    for trend_name, year in trends:
        print(f"‚Ä¢ {trend_name} ({year})")
    
    print()
    
    # –§—É–¥–ø–µ–π—Ä–∏–Ω–≥
    print("üçΩÔ∏è –§—É–¥–ø–µ–π—Ä–∏–Ω–≥:")
    print("-" * 40)
    cursor.execute('SELECT spirit, COUNT(*) FROM food_pairing GROUP BY spirit ORDER BY COUNT(*) DESC')
    pairings = cursor.fetchall()
    
    for spirit, count in pairings:
        print(f"‚Ä¢ {spirit}: {count} —Å–æ—á–µ—Ç–∞–Ω–∏–π")
    
    conn.close()
    
    print("=" * 60)
    print("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    analyze_database()











