#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env –∏ –∑–∞–ø—É—Å–∫–∞ MixMatrixBot
"""

import os
import sys
import subprocess
import time

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞"""
    
    env_content = """# Yandex Cloud AI API Configuration
YANDEX_API_KEY=ajegpjgsbgidg7av4mfj
FOLDER_ID=ajels2ea51569prr6uvb

# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=8303598270:AAF3lCM3RTyBjUxfUSXryUgSk2lZ8mpBO8Q

# API Gateway Configuration (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
API_GATEWAY_URL=https://your-api-gateway.url
API_GATEWAY_STAGING_URL=https://staging-api-gateway.url

# Model Configuration
DEFAULT_MODEL=yandexgpt
DEFAULT_MAX_TOKENS=1000
DEFAULT_TEMPERATURE=0.7
DEFAULT_TOP_P=0.9

# Cursor IDE Configuration
CURSOR_AI_PROVIDER=custom
CURSOR_AI_CUSTOM_API_URL=https://llm.api.cloud.yandex.net/foundationModels/v1/completion
CURSOR_AI_CUSTOM_API_KEY=ajegpjgsbgidg7av4mfj"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ .env: {e}")
        return False

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import aiogram
        import requests
        import sqlite3
        import configparser
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        return False

def start_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º MixMatrixBot...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ main.py
        if not os.path.exists('main.py'):
            print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("üéØ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–π–¥–∏—Ç–µ –µ–≥–æ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        print("üì± –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:")
        print("   /recipe –¥–∂–∏–Ω - —Å–æ–∑–¥–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç —Å AI")
        print("   /seasonal - —Å–µ–∑–æ–Ω–Ω—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏ –¥–ª—è –æ–∫—Ç—è–±—Ä—è")
        print("   /search —Ç–µ–∫–∏–ª–∞ - –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print("   /menu conceptual 3 - –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é")
        print("\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º main.py
        import main
        
        return True
        
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçπ MixMatrixBot - –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –∑–∞–ø—É—Å–∫")
    print("=" * 50)
    
    # –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º .env
    print("\nüìù –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env...")
    if not create_env_file():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env!")
        return
    
    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("\nüîç –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    if not check_dependencies():
        print("‚ùå –ù–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        return
    
    # –®–∞–≥ 3: –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("\nüöÄ –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    if not start_bot():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞!")
        return
    
    print("\nüéâ MixMatrixBot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

if __name__ == "__main__":
    main()
















