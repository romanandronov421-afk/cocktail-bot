#!/usr/bin/env python3
"""
MIXTRIX Professional Database Population
–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–∫—Ç–µ–π–ª—è–º–∏
–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –∏–∑ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–Ω–∏–≥ –±–∞—Ä–Ω–æ–≥–æ —Ä–µ–º–µ—Å–ª–∞
"""

import sqlite3
import json
from datetime import datetime
from typing import Dict, List

class MIXTRIXDatabasePopulator:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MIXTRIX"""
    
    def __init__(self, db_path: str = "mixtrix_professional.db"):
        self.db_path = db_path
        self.conn = sqlite3.connect(db_path)
        self.cursor = self.conn.cursor()
    
    def populate_ingredients_catalog(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤"""
        print("üì¶ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤...")
        
        # –ë–∞–∑–æ–≤—ã–µ —Å–ø–∏—Ä—Ç—ã —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        base_spirits = [
            {
                "name": "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π",
                "name_en": "London Dry Gin",
                "category": "base_spirits",
                "subcategory": "gin",
                "alcohol_content": 40.0,
                "flavor_profile": ["juniper", "citrus", "herbal", "botanical"],
                "seasonality": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "russian_availability": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "substitutes": ["–¥–∂–∏–Ω –≥–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π", "–¥–∂–∏–Ω –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π"],
                "pairing_suggestions": ["—Ü–∏—Ç—Ä—É—Å—ã", "—Ç–æ–Ω–∏–∫", "–≤–µ—Ä–º—É—Ç", "–æ–ª–∏–≤–∫–∏"],
                "cost_tier": "medium",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π –¥–∂–∏–Ω —Å –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º –º–æ–∂–∂–µ–≤–µ–ª—å–Ω–∏–∫–∞",
                "origin": "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è"
            },
            {
                "name": "–≤–æ–¥–∫–∞ –ø—Ä–µ–º–∏—É–º",
                "name_en": "Premium Vodka",
                "category": "base_spirits",
                "subcategory": "vodka",
                "alcohol_content": 40.0,
                "flavor_profile": ["neutral", "clean", "smooth"],
                "seasonality": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "russian_availability": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "substitutes": ["–≤–æ–¥–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è", "–≤–æ–¥–∫–∞ –ª—é–∫—Å"],
                "pairing_suggestions": ["—Ü–∏—Ç—Ä—É—Å—ã", "—è–≥–æ–¥—ã", "—Ç—Ä–∞–≤—ã", "—Å–ø–µ—Ü–∏–∏"],
                "cost_tier": "high",
                "description": "–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –≤–æ–¥–∫–∞ —Å —á–∏—Å—Ç—ã–º –≤–∫—É—Å–æ–º –∏ –º—è–≥–∫–æ—Å—Ç—å—é",
                "origin": "–†–æ—Å—Å–∏—è"
            },
            {
                "name": "—Ä–æ–º –±–µ–ª—ã–π",
                "name_en": "White Rum",
                "category": "base_spirits",
                "subcategory": "rum",
                "alcohol_content": 40.0,
                "flavor_profile": ["sweet", "tropical", "vanilla", "caramel"],
                "seasonality": {"spring": True, "summer": True, "autumn": False, "winter": False},
                "russian_availability": {"spring": True, "summer": True, "autumn": False, "winter": False},
                "substitutes": ["—Ä–æ–º –∑–æ–ª–æ—Ç–æ–π", "—Ä–æ–º —Ç–µ–º–Ω—ã–π"],
                "pairing_suggestions": ["—Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ —Ñ—Ä—É–∫—Ç—ã", "–∫–æ–∫–æ—Å", "–ª–∞–π–º", "–º—è—Ç–∞"],
                "cost_tier": "medium",
                "description": "–ë–µ–ª—ã–π —Ä–æ–º —Å —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–º–∏ –Ω–æ—Ç–∞–º–∏",
                "origin": "–ö–∞—Ä–∏–±—ã"
            }
        ]
        
        # –õ–∏–∫—ë—Ä—ã –∏ –±–∏—Ç—Ç–µ—Ä—ã
        liqueurs = [
            {
                "name": "–∫–∞–º–ø–∞—Ä–∏",
                "name_en": "Campari",
                "category": "liqueurs",
                "subcategory": "bitter_liqueur",
                "alcohol_content": 25.0,
                "flavor_profile": ["bitter", "herbal", "citrus", "spicy"],
                "seasonality": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "russian_availability": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "substitutes": ["–∞–ø–µ—Ä–æ–ª—å", "—Ü–∏–Ω–∞—Ä–æ"],
                "pairing_suggestions": ["–≤–µ—Ä–º—É—Ç", "—Ü–∏—Ç—Ä—É—Å—ã", "–≥–∞–∑–∏—Ä–æ–≤–∫–∞", "–≥–æ—Ä—å–∫–∏–µ —Ç—Ä–∞–≤—ã"],
                "cost_tier": "medium",
                "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –≥–æ—Ä—å–∫–∏–π –ª–∏–∫—ë—Ä —Å —Ç—Ä–∞–≤—è–Ω—ã–º–∏ –Ω–æ—Ç–∞–º–∏",
                "origin": "–ò—Ç–∞–ª–∏—è"
            },
            {
                "name": "—Ç—Ä–∏–ø–ª —Å–µ–∫",
                "name_en": "Triple Sec",
                "category": "liqueurs",
                "subcategory": "orange_liqueur",
                "alcohol_content": 30.0,
                "flavor_profile": ["sweet", "orange", "citrus", "floral"],
                "seasonality": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "russian_availability": {"spring": True, "summer": True, "autumn": True, "winter": True},
                "substitutes": ["–∫—É–∞–Ω—Ç—Ä–æ", "–≥—Ä–∞–Ω–¥ –º–∞—Ä–Ω—å–µ", "—Å–∏–Ω–∏–π –∫—é—Ä–∞—Å–∞–æ"],
                "pairing_suggestions": ["—Ü–∏—Ç—Ä—É—Å—ã", "—Ç–µ–∫–∏–ª–∞", "–¥–∂–∏–Ω", "—Ä–æ–º"],
                "cost_tier": "medium",
                "description": "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π –ª–∏–∫—ë—Ä —Å –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–º —Ü–∏—Ç—Ä—É—Å–æ–≤—ã–º –≤–∫—É—Å–æ–º",
                "origin": "–§—Ä–∞–Ω—Ü–∏—è"
            }
        ]
        
        # –°–µ–∑–æ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è –†–æ—Å—Å–∏–∏
        seasonal_ingredients = [
            {
                "name": "—Ä–µ–≤–µ–Ω—å",
                "name_en": "Rhubarb",
                "category": "seasonal",
                "subcategory": "spring_vegetable",
                "alcohol_content": 0.0,
                "flavor_profile": ["tart", "vegetal", "acidic"],
                "seasonality": {"spring": True, "summer": False, "autumn": False, "winter": False},
                "russian_availability": {"spring": True, "summer": False, "autumn": False, "winter": False},
                "substitutes": ["—â–∞–≤–µ–ª—å", "–ª–∏–º–æ–Ω–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞"],
                "pairing_suggestions": ["–¥–∂–∏–Ω", "–≤–æ–¥–∫–∞", "–º–µ–¥", "–∏–º–±–∏—Ä—å"],
                "cost_tier": "low",
                "description": "–í–µ—Å–µ–Ω–Ω–∏–π –æ–≤–æ—â —Å –∫–∏—Å–ª—ã–º –≤–∫—É—Å–æ–º, –ø–æ–ø—É–ª—è—Ä–µ–Ω –≤ –†–æ—Å—Å–∏–∏",
                "origin": "–†–æ—Å—Å–∏—è"
            },
            {
                "name": "–æ–±–ª–µ–ø–∏—Ö–∞",
                "name_en": "Sea Buckthorn",
                "category": "seasonal",
                "subcategory": "autumn_berry",
                "alcohol_content": 0.0,
                "flavor_profile": ["tart", "citrus", "vitamin_c"],
                "seasonality": {"spring": False, "summer": False, "autumn": True, "winter": True},
                "russian_availability": {"spring": False, "summer": False, "autumn": True, "winter": True},
                "substitutes": ["–∫–ª—é–∫–≤–∞", "–±—Ä—É—Å–Ω–∏–∫–∞"],
                "pairing_suggestions": ["–≤–æ–¥–∫–∞", "–º–µ–¥", "—Ç—Ä–∞–≤—ã", "—Å–ø–µ—Ü–∏–∏"],
                "cost_tier": "low",
                "description": "–û—Å–µ–Ω–Ω—è—è —è–≥–æ–¥–∞ —Å –≤—ã—Å–æ–∫–∏–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –≤–∏—Ç–∞–º–∏–Ω–∞ C",
                "origin": "–†–æ—Å—Å–∏—è"
            },
            {
                "name": "–±—Ä—É—Å–Ω–∏–∫–∞",
                "name_en": "Lingonberry",
                "category": "seasonal",
                "subcategory": "autumn_berry",
                "alcohol_content": 0.0,
                "flavor_profile": ["tart", "sweet", "earthy"],
                "seasonality": {"spring": False, "summer": False, "autumn": True, "winter": True},
                "russian_availability": {"spring": False, "summer": False, "autumn": True, "winter": True},
                "substitutes": ["–∫–ª—é–∫–≤–∞", "–æ–±–ª–µ–ø–∏—Ö–∞"],
                "pairing_suggestions": ["–≤–æ–¥–∫–∞", "–∫–æ–Ω—å—è–∫", "–º–µ–¥", "–≤–∞–Ω–∏–ª—å"],
                "cost_tier": "low",
                "description": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Ä—É—Å—Å–∫–∞—è —è–≥–æ–¥–∞ —Å —Ç–µ—Ä–ø–∫–∏–º –≤–∫—É—Å–æ–º",
                "origin": "–†–æ—Å—Å–∏—è"
            }
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –±–∞–∑—É
        all_ingredients = base_spirits + liqueurs + seasonal_ingredients
        
        for ingredient in all_ingredients:
            try:
                self.cursor.execute("""
                    INSERT OR REPLACE INTO ingredients 
                    (name, name_en, category, subcategory, alcohol_content, flavor_profile, 
                     seasonality, russian_availability, substitutes, pairing_suggestions, 
                     cost_tier, description, origin)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, (
                    ingredient["name"],
                    ingredient["name_en"],
                    ingredient["category"],
                    ingredient["subcategory"],
                    ingredient["alcohol_content"],
                    json.dumps(ingredient["flavor_profile"]),
                    json.dumps(ingredient["seasonality"]),
                    json.dumps(ingredient["russian_availability"]),
                    json.dumps(ingredient["substitutes"]),
                    json.dumps(ingredient["pairing_suggestions"]),
                    ingredient["cost_tier"],
                    ingredient["description"],
                    ingredient["origin"]
                ))
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ {ingredient['name']}: {e}")
        
        self.conn.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(all_ingredients)} –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
    
    def populate_classic_cocktails(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–∫—Ç–µ–π–ª—è–º–∏ –∏–∑ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        print("üç∏ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–∫—Ç–µ–π–ª—è–º–∏...")
        
        # –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ –∏–∑ Savoy Cocktail Book
        savoy_cocktails = [
            {
                "id": "savoy_001",
                "name": "–ú–∞—Ä—Ç–∏–Ω–∏",
                "name_en": "Martini",
                "category": "classic",
                "difficulty": "intermediate",
                "base_spirit": "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π",
                "ingredients": {
                    "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π": {"amount": 60, "unit": "ml", "technique": "stir"},
                    "—Å—É—Ö–æ–π –≤–µ—Ä–º—É—Ç": {"amount": 10, "unit": "ml", "technique": "stir"},
                    "–æ–ª–∏–≤–∫–∞": {"amount": 1, "unit": "—à—Ç", "technique": "garnish"}
                },
                "method": "–ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω–µ –¥–ª—è —Å–º–µ—à–∏–≤–∞–Ω–∏—è —Å–æ –ª—å–¥–æ–º, –ø—Ä–æ—Ü–µ–¥–∏—Ç—å –≤ –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –±–æ–∫–∞–ª",
                "glassware": "–∫–æ–∫—Ç–µ–π–ª—å–Ω—ã–π –±–æ–∫–∞–ª",
                "garnish": "–æ–ª–∏–≤–∫–∞ –∏–ª–∏ –ª–∏–º–æ–Ω–Ω–∞—è —Ü–µ–¥—Ä–∞",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å, —Å–∏–º–≤–æ–ª —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ —É—Ç–æ–Ω—á–µ–Ω–Ω–æ—Å—Ç–∏",
                "description_en": "Classic cocktail, symbol of elegance and sophistication",
                "history": "–°–æ–∑–¥–∞–Ω –≤ –∫–æ–Ω—Ü–µ 19 –≤–µ–∫–∞, –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –º–∞—Ä—Ç–∏–Ω–∏-–≤–µ—Ä–º—É—Ç–∞",
                "flavor_profile": ["dry", "herbal", "smooth", "elegant"],
                "food_pairings": ["—É—Å—Ç—Ä–∏—Ü—ã", "–∏–∫—Ä–∞", "—Å—ã—Ä –ø–∞—Ä–º–µ–∑–∞–Ω", "–æ–ª–∏–≤–∫–∏"],
                "seasonal_availability": ["spring", "summer", "autumn", "winter"],
                "prep_time": 120,
                "cost_estimate": 150.0,
                "profit_margin": 0.7,
                "iba_status": True,
                "source_book": "The Savoy Cocktail Book",
                "author": "Harry Craddock"
            },
            {
                "id": "savoy_002",
                "name": "–ù–µ–≥—Ä–æ–Ω–∏",
                "name_en": "Negroni",
                "category": "classic",
                "difficulty": "beginner",
                "base_spirit": "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π",
                "ingredients": {
                    "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π": {"amount": 30, "unit": "ml", "technique": "stir"},
                    "–∫—Ä–∞—Å–Ω—ã–π –≤–µ—Ä–º—É—Ç": {"amount": 30, "unit": "ml", "technique": "stir"},
                    "–∫–∞–º–ø–∞—Ä–∏": {"amount": 30, "unit": "ml", "technique": "stir"},
                    "–∞–ø–µ–ª—å—Å–∏–Ω–æ–≤–∞—è —Ü–µ–¥—Ä–∞": {"amount": 1, "unit": "—à—Ç", "technique": "garnish"}
                },
                "method": "–ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å–æ –ª—å–¥–æ–º, –ø—Ä–æ—Ü–µ–¥–∏—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω —Å–æ –ª—å–¥–æ–º",
                "glassware": "—Å—Ç–∞–∫–∞–Ω –æ–ª–¥-—Ñ–µ—à–Ω",
                "garnish": "–∞–ø–µ–ª—å—Å–∏–Ω–æ–≤–∞—è —Ü–µ–¥—Ä–∞",
                "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å –≥–æ—Ä—å–∫–æ–≤–∞—Ç—ã–º –≤–∫—É—Å–æ–º",
                "description_en": "Italian classic cocktail with bitter taste",
                "history": "–°–æ–∑–¥–∞–Ω –≤ 1919 –≥–æ–¥—É –≤–æ –§–ª–æ—Ä–µ–Ω—Ü–∏–∏ –≥—Ä–∞—Ñ–æ–º –ö–∞–º–∏–ª–ª–æ –ù–µ–≥—Ä–æ–Ω–∏",
                "flavor_profile": ["bitter", "herbal", "citrus", "complex"],
                "food_pairings": ["–ø–∞—Å—Ç–∞", "—Å—ã—Ä –≥–æ—Ä–≥–æ–Ω–∑–æ–ª–∞", "–æ–ª–∏–≤–∫–∏", "–∞–Ω—á–æ—É—Å—ã"],
                "seasonal_availability": ["spring", "summer", "autumn", "winter"],
                "prep_time": 90,
                "cost_estimate": 120.0,
                "profit_margin": 0.75,
                "iba_status": True,
                "source_book": "The Savoy Cocktail Book",
                "author": "Harry Craddock"
            }
        ]
        
        # –ö–æ–∫—Ç–µ–π–ª–∏ –∏–∑ The Joy of Mixology
        joy_cocktails = [
            {
                "id": "joy_001",
                "name": "–ú–∞–Ω—Ö–µ—Ç—Ç–µ–Ω",
                "name_en": "Manhattan",
                "category": "classic",
                "difficulty": "intermediate",
                "base_spirit": "–≤–∏—Å–∫–∏ —Ä–∂–∞–Ω–æ–π",
                "ingredients": {
                    "–≤–∏—Å–∫–∏ —Ä–∂–∞–Ω–æ–π": {"amount": 60, "unit": "ml", "technique": "stir"},
                    "–∫—Ä–∞—Å–Ω—ã–π –≤–µ—Ä–º—É—Ç": {"amount": 30, "unit": "ml", "technique": "stir"},
                    "–±–∏—Ç—Ç–µ—Ä—Å –∞–Ω–≥–æ—Å—Ç—É—Ä–∞": {"amount": 2, "unit": "dash", "technique": "stir"},
                    "–≤–∏—à–Ω—è": {"amount": 1, "unit": "—à—Ç", "technique": "garnish"}
                },
                "method": "–ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω–µ –¥–ª—è —Å–º–µ—à–∏–≤–∞–Ω–∏—è —Å–æ –ª—å–¥–æ–º, –ø—Ä–æ—Ü–µ–¥–∏—Ç—å –≤ –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –±–æ–∫–∞–ª",
                "glassware": "–∫–æ–∫—Ç–µ–π–ª—å–Ω—ã–π –±–æ–∫–∞–ª",
                "garnish": "–≤–∏—à–Ω—è –º–∞—Ä–∞—Å–∫–∏–Ω–æ",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å –±–æ–≥–∞—Ç—ã–º –≤–∫—É—Å–æ–º",
                "description_en": "Classic American cocktail with rich flavor",
                "history": "–°–æ–∑–¥–∞–Ω –≤ 1870-—Ö –≥–æ–¥–∞—Ö –≤ –ù—å—é-–ô–æ—Ä–∫–µ",
                "flavor_profile": ["rich", "sweet", "spicy", "complex"],
                "food_pairings": ["—Å—Ç–µ–π–∫", "—Å—ã—Ä —á–µ–¥–¥–µ—Ä", "–æ—Ä–µ—Ö–∏", "—à–æ–∫–æ–ª–∞–¥"],
                "seasonal_availability": ["autumn", "winter"],
                "prep_time": 120,
                "cost_estimate": 180.0,
                "profit_margin": 0.8,
                "iba_status": True,
                "source_book": "The Joy of Mixology",
                "author": "Gary Regan"
            }
        ]
        
        # –°–µ–∑–æ–Ω–Ω—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏ –¥–ª—è –†–æ—Å—Å–∏–∏
        seasonal_cocktails = [
            {
                "id": "seasonal_001",
                "name": "–†–µ–≤–µ–Ω–µ–≤—ã–π –î–∂–∏–Ω –§–∏–∑–∑",
                "name_en": "Rhubarb Gin Fizz",
                "category": "seasonal",
                "difficulty": "intermediate",
                "base_spirit": "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π",
                "ingredients": {
                    "–¥–∂–∏–Ω –ª–æ–Ω–¥–æ–Ω—Å–∫–∏–π": {"amount": 50, "unit": "ml", "technique": "shake"},
                    "—Ä–µ–≤–µ–Ω–µ–≤—ã–π —Å–∏—Ä–æ–ø": {"amount": 25, "unit": "ml", "technique": "shake"},
                    "—Å–æ–∫ –ª–∞–π–º–∞": {"amount": 20, "unit": "ml", "technique": "shake"},
                    "—Å–æ–¥–æ–≤–∞—è": {"amount": 100, "unit": "ml", "technique": "top"},
                    "–º—è—Ç–∞": {"amount": 3, "unit": "–ª–∏—Å—Ç", "technique": "garnish"}
                },
                "method": "–í—Å—Ç—Ä—è—Ö–Ω—É—Ç—å –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ —Å–æ –ª—å–¥–æ–º, –ø—Ä–æ—Ü–µ–¥–∏—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω —Å–æ –ª—å–¥–æ–º, –¥–æ–ª–∏—Ç—å —Å–æ–¥–æ–≤–æ–π",
                "glassware": "—Ö–∞–π–±–æ–ª",
                "garnish": "–ª–∏—Å—Ç—å—è –º—è—Ç—ã",
                "description": "–í–µ—Å–µ–Ω–Ω–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å —Ä—É—Å—Å–∫–∏–º —Ä–µ–≤–µ–Ω–µ–º –∏ –æ—Å–≤–µ–∂–∞—é—â–∏–º –≤–∫—É—Å–æ–º",
                "description_en": "Spring cocktail with Russian rhubarb and refreshing taste",
                "history": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∏–∑–∑–∞ —Å —Ä—É—Å—Å–∫–∏–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏",
                "flavor_profile": ["tart", "refreshing", "herbal", "spring"],
                "food_pairings": ["–∑–µ–ª–µ–Ω—ã–π —Å–∞–ª–∞—Ç", "—Ä—ã–±–∞", "–∫–æ–∑—å–∏ —Å—ã—Ä—ã", "–∑–µ–ª–µ–Ω—å"],
                "seasonal_availability": ["spring"],
                "prep_time": 150,
                "cost_estimate": 200.0,
                "profit_margin": 0.6,
                "iba_status": False,
                "source_book": "MIXTRIX Seasonal Collection",
                "author": "MIXTRIX Team"
            },
            {
                "id": "seasonal_002",
                "name": "–û–±–ª–µ–ø–∏—Ö–æ–≤—ã–π –•–æ—Ç –¢–æ–¥–¥–∏",
                "name_en": "Sea Buckthorn Hot Toddy",
                "category": "seasonal",
                "difficulty": "beginner",
                "base_spirit": "–≤–æ–¥–∫–∞ –ø—Ä–µ–º–∏—É–º",
                "ingredients": {
                    "–≤–æ–¥–∫–∞ –ø—Ä–µ–º–∏—É–º": {"amount": 50, "unit": "ml", "technique": "build"},
                    "–æ–±–ª–µ–ø–∏—Ö–æ–≤—ã–π —Å–∏—Ä–æ–ø": {"amount": 30, "unit": "ml", "technique": "build"},
                    "–º–µ–¥": {"amount": 15, "unit": "ml", "technique": "build"},
                    "–≥–æ—Ä—è—á–∞—è –≤–æ–¥–∞": {"amount": 150, "unit": "ml", "technique": "top"},
                    "–∫–æ—Ä–∏—Ü–∞": {"amount": 1, "unit": "–ø–∞–ª–æ—á–∫–∞", "technique": "garnish"}
                },
                "method": "–°–º–µ—à–∞—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –∫—Ä—É–∂–∫–µ, –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä—è—á—É—é –≤–æ–¥—É, –ø–µ—Ä–µ–º–µ—à–∞—Ç—å",
                "glassware": "–∏—Ä–ª–∞–Ω–¥—Å–∫–∞—è –∫—Ä—É–∂–∫–∞",
                "garnish": "–ø–∞–ª–æ—á–∫–∞ –∫–æ—Ä–∏—Ü—ã",
                "description": "–ó–∏–º–Ω–∏–π —Å–æ–≥—Ä–µ–≤–∞—é—â–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å —Ä—É—Å—Å–∫–æ–π –æ–±–ª–µ–ø–∏—Ö–æ–π",
                "description_en": "Winter warming cocktail with Russian sea buckthorn",
                "history": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –≥–æ—Ä—è—á–µ–≥–æ —Ç–æ–¥–¥–∏ —Å —Ä—É—Å—Å–∫–∏–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏",
                "flavor_profile": ["warming", "tart", "spicy", "vitamin_c"],
                "food_pairings": ["–ø–µ—á–µ–Ω—å–µ", "–æ—Ä–µ—Ö–∏", "–º–µ–¥", "–∏–º–±–∏—Ä—å"],
                "seasonal_availability": ["winter"],
                "prep_time": 180,
                "cost_estimate": 180.0,
                "profit_margin": 0.7,
                "iba_status": False,
                "source_book": "MIXTRIX Seasonal Collection",
                "author": "MIXTRIX Team"
            }
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–æ–∫—Ç–µ–π–ª–∏
        all_cocktails = savoy_cocktails + joy_cocktails + seasonal_cocktails
        
        for cocktail in all_cocktails:
            try:
                self.cursor.execute("""
                    INSERT OR REPLACE INTO cocktails 
                    (id, name, name_en, category, difficulty, base_spirit, ingredients, 
                     method, glassware, garnish, description, description_en, history, 
                     flavor_profile, food_pairings, seasonal_availability, prep_time, 
                     cost_estimate, profit_margin, iba_status, source_book, author)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, (
                    cocktail["id"],
                    cocktail["name"],
                    cocktail["name_en"],
                    cocktail["category"],
                    cocktail["difficulty"],
                    cocktail["base_spirit"],
                    json.dumps(cocktail["ingredients"]),
                    cocktail["method"],
                    cocktail["glassware"],
                    cocktail["garnish"],
                    cocktail["description"],
                    cocktail["description_en"],
                    cocktail["history"],
                    json.dumps(cocktail["flavor_profile"]),
                    json.dumps(cocktail["food_pairings"]),
                    json.dumps(cocktail["seasonal_availability"]),
                    cocktail["prep_time"],
                    cocktail["cost_estimate"],
                    cocktail["profit_margin"],
                    cocktail["iba_status"],
                    cocktail["source_book"],
                    cocktail["author"]
                ))
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è {cocktail['name']}: {e}")
        
        self.conn.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(all_cocktails)} –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–∫—Ç–µ–π–ª–µ–π")
    
    def populate_food_pairings(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥–∞"""
        print("üçΩÔ∏è –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥–∞...")
        
        # –§—É–¥–ø–µ–π—Ä–∏–Ω–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ Flavor Bible
        food_pairings = [
            {
                "cocktail_id": "savoy_001",
                "dish_name": "—É—Å—Ç—Ä–∏—Ü—ã",
                "dish_category": "seafood",
                "pairing_type": "complementary",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Å—É—Ö–æ–≥–æ –º–∞—Ä—Ç–∏–Ω–∏ —Å —É—Å—Ç—Ä–∏—Ü–∞–º–∏",
                "confidence_score": 0.9,
                "source": "Flavor Bible"
            },
            {
                "cocktail_id": "savoy_001",
                "dish_name": "–∏–∫—Ä–∞",
                "dish_category": "luxury",
                "pairing_type": "complementary",
                "description": "–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Å –∏–∫—Ä–æ–π",
                "confidence_score": 0.85,
                "source": "Flavor Bible"
            },
            {
                "cocktail_id": "savoy_002",
                "dish_name": "–ø–∞—Å—Ç–∞ –∫–∞—Ä–±–æ–Ω–∞—Ä–∞",
                "dish_category": "italian",
                "pairing_type": "complementary",
                "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –ø–∞—Å—Ç–æ–π",
                "confidence_score": 0.8,
                "source": "Flavor Bible"
            },
            {
                "cocktail_id": "joy_001",
                "dish_name": "—Å—Ç–µ–π–∫ —Ä–∏–±–∞–π",
                "dish_category": "meat",
                "pairing_type": "complementary",
                "description": "–ë–æ–≥–∞—Ç—ã–π –≤–∏—Å–∫–∏ —Å —Å–æ—á–Ω—ã–º —Å—Ç–µ–π–∫–æ–º",
                "confidence_score": 0.9,
                "source": "Flavor Bible"
            }
        ]
        
        for pairing in food_pairings:
            try:
                self.cursor.execute("""
                    INSERT OR REPLACE INTO food_pairings 
                    (cocktail_id, dish_name, dish_category, pairing_type, 
                     description, confidence_score, source)
                    VALUES (?, ?, ?, ?, ?, ?, ?)
                """, (
                    pairing["cocktail_id"],
                    pairing["dish_name"],
                    pairing["dish_category"],
                    pairing["pairing_type"],
                    pairing["description"],
                    pairing["confidence_score"],
                    pairing["source"]
                ))
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥–∞: {e}")
        
        self.conn.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(food_pairings)} —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥–æ–≤")
    
    def populate_seasonal_menus(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–Ω—ã—Ö –º–µ–Ω—é"""
        print("üìã –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–Ω—ã—Ö –º–µ–Ω—é...")
        
        seasonal_menus = [
            {
                "id": "spring_menu_2024",
                "name": "–í–µ—Å–µ–Ω–Ω–µ–µ –º–µ–Ω—é 2024",
                "type": "seasonal",
                "season": "spring",
                "theme": "–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã",
                "cocktails": ["seasonal_001", "savoy_001"],
                "target_audience": "–º–æ–ª–æ–¥—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã",
                "price_range": "medium-high",
                "description": "–°–≤–µ–∂–∏–µ –≤–µ—Å–µ–Ω–Ω–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ —Å —Ä—É—Å—Å–∫–∏–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏",
                "created_by": "MIXTRIX Team"
            },
            {
                "id": "winter_menu_2024",
                "name": "–ó–∏–º–Ω–µ–µ –º–µ–Ω—é 2024",
                "type": "seasonal",
                "season": "winter",
                "theme": "–¢–µ–ø–ª–æ –∏ —É—é—Ç",
                "cocktails": ["seasonal_002", "joy_001"],
                "target_audience": "—Å–µ–º–µ–π–Ω—ã–µ –ø–∞—Ä—ã",
                "price_range": "medium",
                "description": "–°–æ–≥—Ä–µ–≤–∞—é—â–∏–µ –∑–∏–º–Ω–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ —Å —Ä—É—Å—Å–∫–∏–º–∏ —è–≥–æ–¥–∞–º–∏",
                "created_by": "MIXTRIX Team"
            }
        ]
        
        for menu in seasonal_menus:
            try:
                self.cursor.execute("""
                    INSERT OR REPLACE INTO cocktail_menus 
                    (id, name, type, season, theme, cocktails, target_audience, 
                     price_range, description, created_by)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, (
                    menu["id"],
                    menu["name"],
                    menu["type"],
                    menu["season"],
                    menu["theme"],
                    json.dumps(menu["cocktails"]),
                    menu["target_audience"],
                    menu["price_range"],
                    menu["description"],
                    menu["created_by"]
                ))
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é: {e}")
        
        self.conn.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(seasonal_menus)} —Å–µ–∑–æ–Ω–Ω—ã—Ö –º–µ–Ω—é")
    
    def populate_horeca_news(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π HORECA –∏–Ω–¥—É—Å—Ç—Ä–∏–∏"""
        print("üì∞ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π HORECA...")
        
        horeca_news = [
            {
                "title": "–ù–æ–≤—ã–µ —Ç—Ä–µ–Ω–¥—ã –≤ –∫–æ–∫—Ç–µ–π–ª—å–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–µ 2024",
                "content": "–í 2024 –≥–æ–¥—É –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è —Ä–æ—Å—Ç –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ —Å–µ–∑–æ–Ω–Ω—ã–º –∫–æ–∫—Ç–µ–π–ª—è–º —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏...",
                "source": "Difford's Guide",
                "category": "trends",
                "tags": ["—Ç—Ä–µ–Ω–¥—ã", "—Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å", "–ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"],
                "published_at": datetime.now(),
                "is_featured": True
            },
            {
                "title": "–†–æ—Å—Å–∏–π—Å–∫–∏–µ –±–∞—Ä–º–µ–Ω—ã –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö",
                "content": "–†–æ—Å—Å–∏–π—Å–∫–∏–µ –±–∞—Ä–º–µ–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö...",
                "source": "Bar Magazine",
                "category": "competitions",
                "tags": ["–∫–æ–Ω–∫—É—Ä—Å—ã", "–±–∞—Ä–º–µ–Ω—ã", "–†–æ—Å—Å–∏—è"],
                "published_at": datetime.now(),
                "is_featured": False
            }
        ]
        
        for news in horeca_news:
            try:
                self.cursor.execute("""
                    INSERT OR REPLACE INTO horeca_news 
                    (title, content, source, category, tags, published_at, is_featured)
                    VALUES (?, ?, ?, ?, ?, ?, ?)
                """, (
                    news["title"],
                    news["content"],
                    news["source"],
                    news["category"],
                    json.dumps(news["tags"]),
                    news["published_at"],
                    news["is_featured"]
                ))
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏: {e}")
        
        self.conn.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(horeca_news)} –Ω–æ–≤–æ—Å—Ç–µ–π HORECA")
    
    def populate_all(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        print("üç∏ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MIXTRIX...")
        print("=" * 60)
        
        self.populate_ingredients_catalog()
        self.populate_classic_cocktails()
        self.populate_food_pairings()
        self.populate_seasonal_menus()
        self.populate_horeca_news()
        
        print("=" * 60)
        print("‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö MIXTRIX –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print("‚Ä¢ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥")
        print("‚Ä¢ –ö–æ–∫—Ç–µ–π–ª–∏: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ")
        print("‚Ä¢ –§—É–¥–ø–µ–π—Ä–∏–Ω–≥: –Ω–∞ –æ—Å–Ω–æ–≤–µ Flavor Bible")
        print("‚Ä¢ –ú–µ–Ω—é: —Å–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
        print("‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏: HORECA –∏–Ω–¥—É—Å—Ç—Ä–∏—è")
    
    def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
        self.conn.close()

if __name__ == "__main__":
    populator = MIXTRIXDatabasePopulator()
    populator.populate_all()
    populator.close()












