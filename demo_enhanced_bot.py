#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ MIXTRIX
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def demo_enhanced_bot():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞"""
    print("üç∏ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–õ–£–ß–®–ï–ù–ù–û–ì–û –ë–û–¢–ê MIXTRIX")
    print("=" * 60)
    
    try:
        from enhanced_foodpairing_processor import EnhancedFoodPairingProcessor
        
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        processor = EnhancedFoodPairingProcessor()
        
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–∫—É—Å–æ–≤—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π: {len(processor.flavor_combinations)}")
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {len(processor.recipe_database)}")
        
        print("\n" + "=" * 60)
        print("üçΩÔ∏è –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–ö–£–°–û–í–´–• –ö–û–ú–ë–ò–ù–ê–¶–ò–ô")
        print("=" * 60)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤–∫—É—Å–æ–≤—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
        categories = ['fruit_berry', 'floral_herbal', 'spicy_warming', 'creamy_dessert', 'unexpected_avantgarde']
        category_names = ['–§—Ä—É–∫—Ç–æ–≤—ã–µ –∏ —è–≥–æ–¥–Ω—ã–µ', '–¶–≤–µ—Ç–æ—á–Ω—ã–µ –∏ —Ç—Ä–∞–≤—è–Ω—ã–µ', '–ü—Ä—è–Ω—ã–µ –∏ —Å–æ–≥—Ä–µ–≤–∞—é—â–∏–µ', '–°–ª–∏–≤–æ—á–Ω—ã–µ –∏ –¥–µ—Å–µ—Ä—Ç–Ω—ã–µ', '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∏ –∞–≤–∞–Ω–≥–∞—Ä–¥–Ω—ã–µ']
        
        for category, name in zip(categories, category_names):
            combinations = processor.flavor_combinations.get(category, [])
            print(f"\nüçΩÔ∏è {name} ({len(combinations)} –∫–æ–º–±–∏–Ω–∞—Ü–∏–π):")
            for i, combo in enumerate(combinations[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                ingredients_str = " + ".join(combo['ingredients'])
                print(f"  {i}. {ingredients_str} - {combo['description']} (—Å–∏–ª–∞: {combo['strength']}/5)")
        
        print("\n" + "=" * 60)
        print("üçÇ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ï–ó–û–ù–ù–´–• –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô")
        print("=" * 60)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∑–æ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = processor.get_seasonal_recommendations("autumn")
        print(recommendations)
        
        print("\n" + "=" * 60)
        print("üç∏ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò –†–ï–¶–ï–ü–¢–ê")
        print("=" * 60)
        
        print("–°–æ–∑–¥–∞–µ–º —Ä–µ—Ü–µ–ø—Ç –∫–æ–∫—Ç–µ–π–ª—è —Å –¥–∂–∏–Ω–æ–º –ø–æ–¥ —Å—Ç–µ–π–∫...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ü–µ–ø—Ç (–±–µ–∑ –≤—ã–∑–æ–≤–∞ API –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        best_combinations = processor._get_best_combinations_for_spirit("–¥–∂–∏–Ω")
        print(f"\n–õ—É—á—à–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –¥–∂–∏–Ω–∞:")
        for i, combo in enumerate(best_combinations[:5], 1):
            ingredients_str = " + ".join(combo['ingredients'])
            print(f"  {i}. {ingredients_str} - {combo['description']} (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: {combo['compatibility_score']})")
        
        print("\n" + "=" * 60)
        print("üéØ –ù–û–í–´–ï –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê")
        print("=" * 60)
        
        commands = [
            ("/recipe –¥–∂–∏–Ω", "–°–æ–∑–¥–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç —Å –¥–∂–∏–Ω–æ–º"),
            ("/recipe —Ç–µ–∫–∏–ª–∞ dish=—Å—Ç–µ–π–∫", "–†–µ—Ü–µ–ø—Ç –ø–æ–¥ —Å—Ç–µ–π–∫"),
            ("/pairing —Ä—ã–±–∞", "–§—É–¥–ø–µ–π—Ä–∏–Ω–≥ –¥–ª—è —Ä—ã–±—ã"),
            ("/seasonal", "–°–µ–∑–æ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"),
            ("/flavor_combinations fruit", "–§—Ä—É–∫—Ç–æ–≤—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏"),
            ("/knowledge_base", "–ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
        ]
        
        for command, description in commands:
            print(f"‚Ä¢ {command:<25} - {description}")
        
        print("\n" + "=" * 60)
        print("üéâ –ë–û–¢ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
        print("=" * 60)
        print("–í—Å–µ —É–ª—É—á—à–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã:")
        print("‚úÖ 300+ –≤–∫—É—Å–æ–≤—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –∏–∑ The Flavor Bible")
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
        print("‚úÖ –£–º–Ω—ã–π —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥ –ø–æ–¥ –±–ª—é–¥–∞")
        print("‚úÖ –°–µ–∑–æ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –†–æ—Å—Å–∏–∏")
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤")
        print("‚úÖ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    success = await demo_enhanced_bot()
    
    if success:
        print("\nüöÄ –ë–æ—Ç MIXTRIXüç∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏!")
        print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ—É–¥–ø–µ–π—Ä–∏–Ω–≥–∞!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")

if __name__ == "__main__":
    asyncio.run(main())






